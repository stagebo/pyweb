init log file.
platform info:Linux-4.4.0-105-generic-x86_64-with-Ubuntu-16.04-xenial
True
cp ../log/pyweb.log ../log/20180228153934.log
<os._wrap_close object at 0x7f7b0f0af358>
Start the service
Traceback (most recent call last):
  File "/usr/lib/python3.5/configparser.py", line 786, in get
    value = d[option]
  File "/usr/lib/python3.5/collections/__init__.py", line 878, in __getitem__
    return self.__missing__(key)            # support subclasses that define __missing__
  File "/usr/lib/python3.5/collections/__init__.py", line 870, in __missing__
    raise KeyError(key)
KeyError: 'port_ssl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "webs.py", line 194, in <module>
    main()
  File "webs.py", line 182, in main
    app = Application()
  File "webs.py", line 40, in __init__
    self.read_config()
  File "webs.py", line 85, in read_config
    self.webs_port = self.cf.getint("web", "port_ssl")
  File "/usr/lib/python3.5/configparser.py", line 816, in getint
    fallback=fallback, **kwargs)
  File "/usr/lib/python3.5/configparser.py", line 806, in _get_conv
    **kwargs)
  File "/usr/lib/python3.5/configparser.py", line 800, in _get
    return conv(self.get(section, option, **kwargs))
  File "/usr/lib/python3.5/configparser.py", line 789, in get
    raise NoOptionError(option, section)
configparser.NoOptionError: No option 'port_ssl' in section: 'web'
